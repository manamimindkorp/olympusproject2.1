{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class Node \{\
    int data;\
    Node left, right;\
\
    public Node(int data) \{\
        this.data = data;\
        left = right = null;\
    \}\
\}\
\
public class Main \{\
    Node node;\
\
    public void convertToSkewedTree(Node root) \{\
        if (root == null) \{\
            return;\
        \}\
        convertToSkewedTree(root.left);\
        Node right = root.right;\
        root.right = node;\
        root.left = null;\
        node = root;\
        convertToSkewedTree(right);\
    \}\
\
    public void printInorder(Node root) \{\
        if (root == null) \{\
            return;\
        \}\
        System.out.print(root.data + " ");\
        printInorder(root.right);\
    \}\
\
    public static void main(String[] args) \{\
        Main tree = new Main();\
        tree.node = new Node(50);\
        tree.node.left = new Node(30);\
        tree.node.right = new Node(60);\
        tree.node.left.left = new Node(10);\
        tree.node.right.left= new Node(55);\
\
        tree.convertToSkewedTree(tree.node);\
        tree.printInorder(tree.node); // prints "10 30 50 55 60 "\
    \}\
\}}